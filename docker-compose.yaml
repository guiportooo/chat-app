version: '3.4'
services:
  chatapp-app:
    container_name: chatapp-app
    build:
      context: frontend/chat-app
      dockerfile: Dockerfile
    volumes:
      - './frontend/chat-app:/app'
      - '/app/node_modules'
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true

  chatapp-api:
    container_name: chatapp-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ConnectionStrings__ChatApp=Server=sql-server;Database=ChatApp;User Id=sa;Password=local@db_123;MultipleActiveResultSets=true;
      - MessageBroker__Host=rabbitmq
      - ASPNETCORE_Kestrel__Certificates__Default__Password=pass@123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - WAIT_HOSTS=sql-server:1433
      - WAIT_HOSTS=rabbitmq:5672
    volumes:
      - ~/.aspnet/https:/https:ro
    build:
      context: backend/src/ChatApp.Api
      dockerfile: Dockerfile
    ports:
      - 5001:443
      - 5000:80
    depends_on:
      - sql-server
      - rabbitmq

  chatapp-stockbot:
    container_name: chatapp-stockbot
    environment:
      - DOTNET_ENVIRONMENT=Development
      - MessageBroker__Host=rabbitmq
      - WAIT_HOSTS=rabbitmq:5672
    build:
      context: backend/src/ChatApp.StockBot
      dockerfile: Dockerfile
    depends_on:
      - sql-server
      - rabbitmq

  sql-server:
    container_name: sql-server
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=local@db_123
    ports:
      - 1433:1433

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
